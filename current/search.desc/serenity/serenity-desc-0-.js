searchState.loadedDescShard("serenity", 0, "Serenity is a Rust library for the Discord API.\nContains the error value\nA common error enum returned by most of the library’s …\nAn error from the <code>gateway</code> module.\nAn error from the <code>http</code> module.\nAn <code>std::io</code> error.\nAn error from the <code>serde_json</code> crate.\nAn error from the <code>model</code> module.\nContains the success value\nThe common result type between most library functions.\nAn error from the <code>tungstenite</code> crate.\nSpecial module that re-exports most public items from this …\nA set of builders used to make using methods on certain …\nA cache containing data received from <code>Shard</code>s.\nA set of constants used by the library.\nThe framework is a customizable method of separating …\nContains the necessary plumping for maintaining a …\nThe HTTP module which provides functions for performing …\nMappings of objects received from the API, with optional …\nA set of exports which can be helpful to use.\nA set of utilities to help with common use cases that are …\nOnly valid for component-based interactions (seems to work …\nA builder to add parameters when using <code>GuildId::add_member</code>.\nOnly valid for autocomplete interactions.\nA builder for creating a components action row in a …\nA builder to manage the allowed mentions on a message, …\nA builder for creating a new attachment from a file path, …\nDiscord docs\nA builder for constructing an invite link with custom …\nA builder for creating a button component in a message\nA builder for creating a new <code>GuildChannel</code> in a <code>Guild</code>.\nA builder for creating a new <code>Command</code>.\nA builder for creating a new <code>CommandOption</code>.\nA builder for creating an <code>CommandPermission</code>.\nA builder to create an embed in a message\nA builder to create the author data of an embed. See …\nA builder to create the footer data for an embed. See …\nDiscord docs.\nDiscord docs\nA builder for creating a <code>GuildWelcomeChannel</code>.\nA builder for creating an input text component in a modal\nDiscord docs.\nDiscord docs\nDiscord docs.\nA builder to create a <code>RichInvite</code> for use via …\nA builder to specify the contents of an send message …\nDiscord docs.\nDiscord docs\nA builder for creating a select menu component in a message\nDiscord docs.\nA builder for creating an option of a select menu …\nBuilder for creating a stage instance\nA builder to create a guild sticker\nDiscord docs:\nDiscord docs\nAcknowledges the interaction in order to edit a response …\nYou can add new attachments and edit existing ones using …\nA builder for creating or editing guild AutoMod rules.\nA builder to edit a <code>GuildChannel</code> for use via …\nA builder for creating several <code>CommandPermission</code>.\nA builder to optionally edit certain fields of a guild\nA builder to edit the welcome screen of a guild\nA builder to specify the fields to edit in a <code>GuildWidget</code>.\nDiscord docs\nA builder which edits the properties of a <code>Member</code>, to be …\nA builder to specify the fields to edit in an existing …\nA builder to edit the current user’s settings, to be …\nA builder to create or edit a <code>Role</code> for use via a number of …\nDiscord docs\nEdits a <code>StageInstance</code>.\nA builder to create or edit a <code>Sticker</code> for use via a number …\nDiscord docs.\nA builder which edits a user’s voice state, to be used …\nDiscord docs\nA builder to specify the fields to edit in an existing …\nA builder to create the content for a <code>Webhook</code>’s …\nBuilds a request to the API to retrieve messages.\nOnly valid in modals!\nResponds to an interaction with a message.\nNot valid for Modal and Ping interactions\nAcknowledges a Ping (only required when your bot uses an …\nOnly valid for component-based interactions.\nSets the OAuth2 access token for this request, replacing …\nSet the actions which will execute when the rule is …\nAdds a new attachment to the attachment list.\nAdds an embed to the message.\nAdds an embed to the message.\nAdd an embed for the message.\nAdds an embed for the message.\nAdd an embed for the message.\nAdds an embed for the message.\nAdds multiple embeds for the message.\nAdds multiple embeds to the message.\nAdd multiple embeds for the message.\nAdds multiple embeds to the message.\nAdd multiple embeds for the message.\nAdds multiple embeds to the message.\nAppends a file to the message.\nAppends a file to the message.\nAppends a file to the message.\nAppends a file to the webhook message.\nAppends a list of files to the message.\nAppends a list of files to the message.\nAppends a list of files to the message.\nAppends a list of files to the webhook message.\nAdds an optional int-choice.\nAdd an int autocomplete choice.\nAdds a localized optional int-choice. See …\nAdds an optional number-choice.\nAdds a number autocomplete choice.\nAdds a localized optional number-choice. See …\nAdds an application command option for the application …\nAdd a sticker ID for the message.\nAdd multiple sticker IDs for the message.\nAdds an optional string-choice.\nAdds a string autocomplete choice.\nAdds a localized optional string-choice. See …\nIf the option is a <code>SubCommandGroup</code> or <code>SubCommand</code>, nested …\nSet the “AFK voice channel” that users are to move to …\nSet the amount of time a user is to be moved to the AFK …\nIndicates to retrieve the messages after a specific …\nCreates a permission overwrite for all channels in a guild\nToggles mentions for all roles. Overrides <code>Self::roles</code> if …\nToggles mentions for all users. Overrides <code>Self::users</code> if …\nSet the allowed mentions for the message.\nSet the allowed mentions for the message.\nSet the allowed mentions for the message.\nSet the allowed mentions for the message.\nSet the allowed mentions for the message.\nSet the allowed mentions for the message.\nSet the allowed mentions for the message.\nIf this is a forum post, edits the assigned tags of this …\nThe archive status of the thread.\nIndicates to retrieve the messages <em>around</em> a specific …\nSame as calling <code>Self::image</code> with “…\nSets attachments, see <code>EditAttachments</code> for more details.\nSets attachments, see <code>EditAttachments</code> for more details.\nSets attachments, see <code>EditAttachments</code> for more details.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSets the request’s audit log reason.\nSet the author of the embed.\nDuration in minutes to automatically archive the forum …\nDuration in minutes to automatically archive the thread …\nDuration in minutes to automatically archive the thread …\nAutomatically fetch and set the client Id of your …\nSet of tags that can be used in a forum channel\nIf this is a forum channel, sets the tags that can be …\nSet the webhook’s default avatar.\nSet the avatar of the current user.\nSet the webhook’s default avatar.\nOverride the default avatar of the webhook with an image …\nSet the banner image of the guild, it appears on the left …\nSets the banner of the current user.\nIndicates to retrieve the messages before a specific …\nThe bitrate (in bits) of the voice or stage channel; min …\nThe bitrate of the channel in bits.\nBuilds the url with the provided data.\nAdds a clickable button to this message.\nAdds a clickable button to this message.\nAdds a clickable button to this message.\nAdds a clickable button to this message.\nAdds a clickable button to this message.\nAdds a clickable button to this message.\nAdds a clickable button to this message.\nBuilds an <code>CreateAttachment</code> from the raw attachment data.\nSpecify the category, the “parent” of this channel.\nThe parent category of the channel.\nCreates a permission overwrite for a specific channel\nSets the channel id of the scheduled event. Required if …\nThe server description shown in the welcome screen.\nSets the channel id of the scheduled event. If the <code>kind</code> of …\nSet the channel to move the webhook to.\nIf the option is a <code>Channel</code>, it will only be able to show …\nShorthand for calling <code>Self::attachments</code> with …\nShorthand for calling <code>Self::attachments</code> with …\nSpecify the client Id of your application.\nSet the colour of the left-hand side of the embed.\nSet the colour of the left-hand side of the embed.\nSet the colour of the role.\nSets the components of this message.\nSets the components of this message.\nSets the components of this message.\nSets the components of this message.\nSets the components of this message.\nSets the components of this message.\nSets the components for this message. Requires an …\nSets the components for this message. Requires an …\nSet the content of the message.\nSet the content of the message.\nSet the content of the message.\nSet the content of the message.\nSet the content of the message.\nSet the content of the message.\nSet the content of the message.\nSets the custom id of the button, a developer-defined …\nSets the custom id of the select menu, a developer-defined …\nSets the custom id of the input text, a developer-defined …\nWhether to deafen the member.\nWhether to deafen the member.\nCreates a builder with default values, setting the <code>type</code> to …\nThe default duration that the clients use (not the API) …\nThe default duration that the clients use (not the API) …\nThe default forum layout type used to display posts in …\nSpecifies the default permissions required to execute the …\nSet the default message notification level.\nEmoji to show in the add reaction button on a thread in a …\nThe emoji to show in the add reaction button on a thread …\nSets this option as selected by default.\nThe default sort order type used to order posts in forum …\nThe default sort order type used to order posts in forum …\nThe initial rate_limit_per_user to set on newly created …\nDelete the current user’s avatar, resetting it to the …\nDelete the webhook’s avatar, resetting it to the default …\nDeletes the current user’s banner, resetting it to the …\nClear the current guild icon, resetting it to the default …\nSets a description for the file (max 1024 characters).\nSets the description for the option, replacing the current …\nSpecifies the description of the application command.\nSets the description shown on this option.\nSet the description of the embed.\nSets the description of the scheduled event.\nSet the description of the sticker.\nSet the description of the guild.\nThe server description shown in the welcome screen.\nThe description shown for the channel.\nSets the description of the scheduled event.\nThe description of the sticker.\nSpecifies a localized description of the option.\nSpecifies a localized description of the application …\nTimes the user out until <code>time</code>, an ISO8601-formatted …\nSpecify whether the user cannot change the guild in the …\nSets the disabled state for the button.\nSets the disabled state for the button.\nDisconnects the user from their voice channel, if any.\nSet the splash image of the guild on the discovery page.\nSpecifies if the command is available in DMs.\nSets a single embed to include in the message\nSets a single embed to include in the message.\nSet an embed for the message.\nSets a single embed to include in the message\nSet an embed for the message.\nSets a single embed to include in the message\nSet an embed for the message.\nSets a list of embeds to include in the message.\nSets a list of embeds to include in the message.\nSet multiple embeds for the message.\nSets the embeds for the message.\nSet multiple embeds for the message.\nSets the embeds for the message.\nSet multiple embeds for the message.\nSets emoji of the button.\nSets emoji of the option.\nThe emoji shown for the channel.\nClear the list of mentionable roles.\nClear the list of mentionable users.\nAllow a user to communicate, removing their timeout, if …\nSet whether the rule is enabled.\nWhether the welcome screen is enabled or not.\nWhether the widget is enabled or not.\nSets the end time of the scheduled event. Required if …\nSets the end time of the scheduled event.\nIf true and <code>Self::nonce</code> is provided, it will be checked …\nAdds or removes the ephemeral flag.\nAdds or removes the ephemeral flag\nSet the event context the rule should be checked.\nToggles @everyone and @here mentions.\nCreates a permission overwrite for a everyone in a guild\nAdds a <code>User</code> to this guild with a valid OAuth2 access token.\nCreates a new <code>Channel</code> in the guild.\nCreate a <code>Command</code>, overriding an existing one with the same …\nCreate permissions for a guild application command. These …\nCreates a forum post in the given channel.\nCreates a response to the interaction received.\nCreates a response to an autocomplete interaction.\nCreates or edits a followup response to the response sent. …\nCreates an invite for the given channel.\nSend a message to the channel.\nCreates a new scheduled event in the guild with the data …\nCreates the stage instance.\nCreates a new sticker in the guild with the data set, if …\nCreates a thread, either private or public. Public threads …\nCreates the webhook.\nCreates or edits an AutoMod <code>Rule</code> in a guild. Providing a …\nEdits the channel’s settings.\nEdits the given guild.\nEdits the guild’s welcome screen.\nEdits the guild’s widget.\nEdits the initial interaction response. Does not work for …\nEdits the properties of the guild member.\nEdits a message in the channel.\nEdit the current user’s profile with the fields set.\nEdits the role.\nModifies a scheduled event in the guild with the data set, …\nEdits the stage instance\nEdits the sticker.\nEdits the thread.\nEdits the given user’s voice state in a stage channel. …\nEdits the webhook corresponding to the provided <code>WebhookId</code> …\nEdits the webhook’s message.\nExecutes the webhook with the given content.\nGets messages from the channel.\nSet channels that should not be affected by the rule.\nSet roles that should not be affected by the rule.\nSet the content filter level.\nSet the features of the guild.\nSet a field. Note that this will not overwrite other …\nAdds multiple fields at once.\nBuilds an <code>CreateAttachment</code> by reading from a file handler.\nSet the sticker file. Replaces the current value as set in …\nSets a list of files to include in the message.\nSets a list of files to include in the message.\nSets a list of files to include in the message.\nSets a list of files to include in the webhook message.\nSets the flags for the message.\nSets the flags for the response.\nSets the flags for the message.\nChannel flags combined as a bitfield. Currently only …\nSets the flags for the message.\nChannel flags combined as a bitfield; <code>ChannelFlags::PINNED</code> …\nSets the flags for the message.\nSet the footer of the embed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new builder with the values of the given <code>Role</code>.\nSpecify the Id of the guild to prefill the dropdown picker …\nWhether or not to hoist the role above lower-positioned …\nSet the icon of the guild. Pass <code>None</code> to remove the icon.\nSet the role icon to a custom image.\nSet the URL of the author’s icon.\nSet the icon URL’s value. This only supports HTTP(S).\nThe Id of the channel to show.\nSet the image associated with the embed. This only …\nSets the cover image for the scheduled event.\nSets the cover image for the scheduled event.\nEdits a message within a given thread. If the provided …\nExecute within a given thread. If the provided thread Id …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether or not non-moderators can add other non-moderators …\nWhether non-moderators can add other non-moderators to a …\nThis method adds an existing attachment to the list of …\nCreates a new attachments builder that keeps all existing …\nShorthand for <code>EditAttachments::keep</code>.\nShorthand for <code>EditAttachments::keep</code>.\nShorthand for <code>EditAttachments::keep</code>.\nSpecify what type the channel is, whether it’s a text, …\nSets the <code>CommandOptionType</code>, replacing the current value as …\nSpecifies the type of the application command.\nSets the entity type of the scheduled event, replacing the …\nThe thread type, either <code>ChannelType::PublicThread</code> or …\nThe type of channel; only conversion between text and …\nSets the entity type of the scheduled event.\nSets label of the button.\nSets the label of this option, replacing the current value …\nSets the label of this input text. Replaces the current …\nThe maximum number of messages to retrieve for the query.\nSets the location of the scheduled event. Required to be …\nSets the location of the scheduled event.\nThe lock status of the thread.\nThe duration that the invite will be valid for.\nSets the maximum permitted value for this integer option\nSets the maximum permitted length for this string option.\nSets the maximum length required for the input text\nSets the maximum permitted value for this number option\nThe number of uses that the invite will be valid for.\nSets the maximum values for the user to select.\nWhether or not to make the role mentionable, upon which …\nThe contents of the first message in the forum post.\nSets the minimum permitted value for this integer option\nSets the minimum permitted length for this string option.\nSets the minimum length required for the input text\nSets the minimum permitted value for this number option\nSets the minimum values for the user to select.\nWhether to mute the member.\nWhether to mute the member.\nSpecify how to call this new channel, replacing the …\nSets the name of the option, replacing the current value …\nSpecifies the name of the application command, replacing …\nSet the author’s name, replacing the current value as …\nThe name of the forum post. Replaces the current value as …\nSets the name of the scheduled event, replacing the …\nSet the name of the sticker, replacing the current value …\nThe name of the thread. Replaces the current value as set …\nSet the webhook’s name, replacing the current value as …\nThe display name of the rule.\nThe name of the channel.\nSet the name of the guild.\nSet the role’s name.\nSets the name of the scheduled event.\nThe name of the sticker to set.\nThe name of the thread.\nSet the webhook’s name.\nSpecifies a localized name of the option.\nSpecifies a localized name of the application command.\nConstructs a new builder with the given access token, …\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nAn empty attachments builder.\nCreates a builder with the given name, setting <code>Self::kind</code> …\nCreates a new builder with the given option type, name, …\nCreates a new builder with the given name, leaving all …\nCreates a normal button with the given custom ID. You must …\nCreates a builder with given custom id (a …\nCreates a select menu option with the given label and …\nCreates a text input with the given style, label, and …\nEquivalent to <code>Self::default</code>.\nCreates an author object with the given name, leaving all …\nCreates a new footer object with the given text, leaving …\nCreates a builder with the given name and message content, …\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nCreates a new modal.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nCreates a builder with the provided kind, name, and start …\nCreates a builder with the provided topic.\nCreates a new builder with the given data. All of this …\nCreates a builder with the given thread name, leaving all …\nCreates a new builder with the given webhook name, leaving …\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nEquivalent to <code>Self::default</code>.\nAdds a new attachment to the message.\nAdds a new attachment to the message.\nAdds a new attachment to the message.\nCreates a link button to the given URL. You must also set …\nCreates a new premium button associated with the given SKU.\nSets the member’s nickname.\nChanges the member’s nickname. Pass an empty string to …\nCan be used to verify a message was sent (up to 25 …\nSpecify if this channel is NSFW (18+)\nWhether this command is marked NSFW (age-restricted)\nIs the channel inappropriate for work?\nTransfers the ownership of the guild to another user by Id.\nBuilds an <code>CreateAttachment</code> by reading a local file.\nSpecify the permissions your application requires.\nA set of overwrites defining what a user or a user …\nA set of overwrites defining what a user or a user …\nSet the role’s permissions.\nThe placeholder of the select menu.\nSets the placeholder of this input text.\nSets the <code>Poll</code> for this message.\nSpecify where the channel should be located.\nThe position of the channel in the channel list.\nSet the role’s position in the role list. This …\nSet the preferred locale used in Server Discovery and …\nWhether the guild’s boost progress bar should be enabled\nThe privacy level of the scheduled event\nSets the privacy level of the stage instance\nSet the channel ID where admins and moderators receive …\nHow many seconds must a user wait before sending another …\nHow many seconds must a user wait before sending another …\nHow many seconds must a user wait before sending another …\nHow many seconds must a user wait before sending another …\nAmount of seconds a user has to wait before sending …\nAdds a list of reactions to create after the message’s …\nSet the reference message this message is a reply to.\nThis method removes an existing attachment from the list …\nShorthand for calling <code>Self::attachments</code> with …\nShorthand for <code>EditAttachments::remove</code>.\nMakes the reply mention/ping the user.\nRequests or clears a request to speak. Passing <code>true</code> is …\nSets the current bot user’s request to speak timestamp. …\nSets if this option is required or optional.\nSets if the input text is required\nCreates a permission overwrite for a specific role\nSets the list of roles that the member should have.\nSets the <em>specific</em> roles that will be allowed mentionable.\nSet the list of roles that the member should have.\nChannel voice region id of the voice or stage channel, …\nSet the channel ID of the rules and guidelines channel.\nSpecify the scopes for your application.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nAdds an interactive select menu to this message.\nWhether or not to notify @everyone that a stage instance …\nOptionally enable/disable autocomplete interactions for …\nFor autocomplete responses this sets their autocomplete …\nSets all the application command options for the …\nIf the option is a <code>SubCommandGroup</code> or <code>SubCommand</code>, nested …\nChannels linked in the welcome screen and their display …\nSet the splash image of the guild on the invitation page.\nSets the start time of the scheduled event, replacing the …\nSets the start time of the scheduled event.\nSets the status of the scheduled event.\nSets a single sticker ID to include in the message.\nSets a list of sticker IDs to include in the message.\nSets the style of this button.\nSets the style of this input text. Replaces the current …\nWhether to suppress the user. Setting this to false will …\nSuppress or unsuppress embeds in the message, this …\nModifies the notifications that are sent by discord to the …\nSet the channel ID where welcome messages and boost events …\nThe Discord name of a unicode emoji representing the …\nThe Discord name of a unicode emoji representing the …\nThe ID of the embedded application to open for this …\nThe type of target for this voice channel invite.\nThe ID of the user whose stream to display for this …\nWhether an invite grants a temporary membership.\nSet the footer’s text, replacing the current value as …\nName of thread to create (requires the webhook channel to …\nSet the thumbnail of the embed. This only supports HTTP(S).\nSet the timestamp.\nSet the title of the embed.\nConverts the stored data to the base64 representation.\nChannel topic (0-1024 characters)\nSets the topic of the stage channel instance, replacing …\nThe topic of the channel. Can be empty.\nSets the topic of the stage channel instance.\nSet the type of content which can trigger the rule.\nSet whether the message is text-to-speech.\nSet whether the message is text-to-speech.\nSet whether the message is text-to-speech.\nWhether the message is a text-to-speech message.\nSet the role icon to a unicode emoji.\nWhether or not to try to reuse a similar invite.\nBuilds an <code>CreateAttachment</code> by downloading attachment data …\nSet the URL to direct to when clicking on the title.\nSet the author’s URL.\nCreates a permission overwrite for a specific user\nSet how many users may occupy this voice channel\nThe number of users that may be in the channel …\nModifies the current user’s username.\nOverride the default username of the webhook.\nSets the <em>specific</em> users that will be allowed mentionable.\nSets the value of this option, replacing the current value …\nSets the value of this input text.\nSet the verification level of the guild. This can restrict …\nThe camera video quality mode of the voice channel\nThe camera video quality mode of the channel.\nMove the member into a voice channel.\nThe voice region of the channel. It is automatic when <code>None</code>.\nAllows users to select multiple answers for the Poll.\nSets the answers that can be picked from.\nSee the documentation of <code>Self::new</code>.\nSets the duration for the Poll to run for.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the layout type for the Poll to take.\nCreates a builder for creating a Poll.\nCreates a builder for a Poll answer.\nSets the question to be polled.\nA cache containing data received from <code>Shard</code>s.\nTrait used for updating the cache with a type.\nThe return type of an update.\nSettings for the cache.\nWhether to cache channel data received from gateway.\nWhether to cache guild data received from gateway.\nWhether to cache user data received from gateway.\nGet a reference to the cached messages for a channel based …\nThis method provides a reference to the user used by the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a reference to a guild from the cache based on the …\nClones all channel categories in the given guild and …\nReturns the number of cached guilds.\nFetches a vector of all <code>Guild</code>s’ Ids that are stored in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of messages to store in a channel’s …\nRetrieves a <code>Channel</code>’s message from the cache based on …\nCreates a new cache.\nCreates a new cache instance with settings applied.\nSets the maximum amount of messages per channel to cache.\nReturns the settings.\nReturns the number of shards.\nThis method clones and returns all unavailable guilds.\nFetches the number of <code>Member</code>s that have not had data …\nUpdates the cache with the implementation.\nUpdates the cache with the update implementation for an …\nA <code>ComponentInteractionCollector</code> receives …\nA <code>MessageCollector</code> receives <code>Message</code>’s match the given …\nA <code>ModalInteractionCollector</code> receives <code>ModalInteraction</code>’s …\nA <code>ReactionCollector</code> receives <code>Reaction</code>’s match the given …\nFilters <code>ComponentInteraction</code>’s by a specific <code>UserId</code>.\nFilters <code>ModalInteraction</code>’s by a specific <code>UserId</code>.\nFilters <code>Reaction</code>’s by a specific <code>UserId</code>.\nFilters <code>Message</code>’s by a specific <code>UserId</code>.\nFilters <code>ComponentInteraction</code>’s by a specific <code>ChannelId</code>.\nFilters <code>ModalInteraction</code>’s by a specific <code>ChannelId</code>.\nFilters <code>Reaction</code>’s by a specific <code>ChannelId</code>.\nFilters <code>Message</code>’s by a specific <code>ChannelId</code>.\nFundamental collector function. All collector types in …\nFilters <code>ComponentInteraction</code>’s by a specific …\nFilters <code>ModalInteraction</code>’s by a specific <code>Vec&lt;FixedString&gt;</code>…\nSets a generic filter function.\nSets a generic filter function.\nSets a generic filter function.\nSets a generic filter function.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFilters <code>ComponentInteraction</code>’s by a specific <code>GuildId</code>.\nFilters <code>ModalInteraction</code>’s by a specific <code>GuildId</code>.\nFilters <code>Reaction</code>’s by a specific <code>GuildId</code>.\nFilters <code>Message</code>’s by a specific <code>GuildId</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFilters <code>ComponentInteraction</code>’s by a specific <code>MessageId</code>.\nFilters <code>ModalInteraction</code>’s by a specific <code>MessageId</code>.\nFilters <code>Reaction</code>’s by a specific <code>MessageId</code>.\nCreates a new collector without any filters configured.\nCreates a new collector without any filters configured.\nCreates a new collector without any filters configured.\nCreates a new collector without any filters configured.\nReturns the next <code>ComponentInteraction</code> which passes the …\nReturns the next <code>ModalInteraction</code> which passes the filters.\nReturns the next <code>Reaction</code> which passes the filters. You …\nReturns the next <code>Message</code> which passes the filters. You can …\nReturns a <code>Stream</code> over all collected <code>ComponentInteraction</code>.\nReturns a <code>Stream</code> over all collected <code>ModalInteraction</code>.\nReturns a <code>Stream</code> over all collected <code>Reaction</code>.\nReturns a <code>Stream</code> over all collected <code>Message</code>.\nSets a duration for how long the collector shall receive …\nSets a duration for how long the collector shall receive …\nSets a duration for how long the collector shall receive …\nSets a duration for how long the collector shall receive …\nDispatches an event.\nThe maximum number of embeds in a message.\nThe maximum length of the textual size of an embed.\nThe gateway version used by the library. The gateway URL …\nUsed for ping checking.\nSent immediately following a client heartbeat that was …\nSent immediately after connection, contains heartbeat + …\nUsed for client handshake.\nUsed to notify clients that they have an invalid session …\nThe large threshold to send on identify.\nThe maximum number of members the bot can fetch at once\nThe maximum unicode code points allowed within a message …\nAn enum representing the [gateway opcodes].\nUsed to update the client status.\nUsed to tell clients to reconnect to the gateway.\nUsed to request guild members.\nUsed to resume a closed connection.\nThe maximum number of stickers in a message.\nThe UserAgent sent along with every request.\nVariant value is unknown.\nUsed for voice ping checking.\nUsed to join/move/leave voice channels.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMore than one identify payload was sent.\nThe account token sent with the identify payload was …\nAn invalid payload was sent.\nDisallowed gateway intents have been provided.\nUndocumented gateway intents have been provided.\nThe sequence sent when resuming the session was invalid.\nAn invalid shard when identifying was sent.\nA payload was sent prior to identifying.\nPayloads were being sent too quickly.\nA session timed out.\nThe session would have handled too many guilds.\nUnknown error; try reconnecting?\nInvalid Gateway OP Code.\nA trait for defining your own framework for serenity to …\nCalled on every incoming event.\nCalled directly after the <code>Client</code> is created.\nActivity data of the current user.\nThere was an error building a URL.\nDiscord docs.\nThe connection closed, potentially uncleanly.\nWhen disallowed gateway intents are provided.\nExpected a Hello during a handshake\nAn error that occurred while attempting to deal with the …\nWhen there was an error sending a heartbeat.\nWhen invalid authentication (a bad token) was sent in the …\nWhen undocumented gateway intents are provided.\nExpected a Ready or an InvalidateSession\nWhen invalid sharding data was sent in the IDENTIFY.\nWhen no authentication was sent in the IDENTIFY.\nWhen a session Id was expected (for resuming), but was not …\nReturns all members of the guilds specified. Requires …\nWhen a shard would have too many guilds assigned to it.\nPresence data of the current user.\nA common username prefix filter for the members returned.\nFailed to reconnect after a number of attempts.\nA set of exact user IDs to query for.\nThe current activity, if present\nThe <code>Client</code> contains information about a bot’s token, as …\nCreates an activity that appears as <code>Competing in &lt;name&gt;</code>.\nCreates an activity that appears as <code>&lt;state&gt;</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe type of the activity\nCreates an activity that appears as <code>Listening to &lt;name&gt;</code>.\nThe name of the activity\nCreates an activity that appears as <code>Playing &lt;name&gt;</code>.\nErrors\nErrors\nErrors\nErrors\nSharding is a method for load-balancing bots across …\nThe state of the activity, if the type is …\nThe current online status\nCreates an activity that appears as <code>Streaming &lt;name&gt;</code>.\nThe url of the activity, if the type is …\nCreates an activity that appears as <code>Watching &lt;name&gt;</code>.\nDispatched when an auto moderation rule was triggered and …\nDispatched when an auto moderation rule was created.\nDispatched when an auto moderation rule was deleted.\nDispatched when an auto moderation rule was updated.\nDispatched when the cache has received and inserted all …\nDispatched when a category is created.\nDispatched when a category is deleted.\nDispatched when a channel is created.\nDispatched when a channel is deleted.\nDispatched when a pin is added, deleted.\nDispatched when a channel is updated.\nThe Client is the way to be able to start sending …\nA builder implementing <code>IntoFuture</code> building a <code>Client</code> to …\nDispatched when the permissions of an application command …\nThe context is a general utility struct provided on event …\nDispatched when a user subscribes to a SKU.\nDispatched when a user’s entitlement has been deleted. …\nDispatched when a user’s entitlement has been updated, …\nThe core trait for handling events by serenity.\nThis enum stores every possible event that an <code>EventHandler</code> …\nDispatched when a new audit log entry is created.\nDispatched when a user is banned from a guild.\nDispatched when a user’s ban is lifted from a guild.\nDispatched when a guild is created; or an existing guild’…\nDispatched when a guild is deleted.\nDispatched when the emojis are updated.\nDispatched when a guild’s integration is added, updated …\nDispatched when a user joins a guild.\nDispatched when a user’s membership ends by leaving, …\nDispatched when a member is updated (e.g their nickname is …\nDispatched when the data for offline members was requested.\nDispatched when a role is created.\nDispatched when a role is deleted.\nDispatched when a role is updated.\nDispatched when a scheduled event is created.\nDispatched when a scheduled event is deleted.\nDispatched when a scheduled event is updated.\nDispatched when a guild member has subscribed to a …\nDispatched when a guild member has unsubscribed from a …\nDispatched when the stickers are updated.\nDispatched when the guild is updated.\nDispatched when a guild integration is created.\nDispatched when a guild integration is deleted.\nDispatched when a guild integration is updated.\nDispatched when an interaction is created (e.g a slash …\nDispatched when a invite is created.\nDispatched when a invite is deleted.\nDispatched when a message is created.\nDispatched when a message is deleted.\nDispatched when multiple messages were deleted at once.\nDispatched when a user votes on a message poll.\nDispatched when a user removes a previous vote on a poll.\nDispatched when a message is updated.\nDispatched when a user’s presence is updated (e.g off -&gt; …\nDispatched when an HTTP rate limit is hit\nThis core trait for handling raw events\nDispatched when a new reaction is attached to a message.\nDispatched when a reaction is detached from a message.\nDispatched when all reactions of a message are detached …\nDispatched when all reactions of a message are detached …\nDispatched upon startup.\nDispatched upon reconnection.\nDispatched when a shard’s connection stage is updated\nDispatched when every shard has received a Ready event\nDispatched when a stage instance is created.\nDispatched when a stage instance is deleted.\nDispatched when a stage instance is updated.\nDispatched when a thread is created or the current user is …\nDispatched when a thread is deleted.\nDispatched when the current user gains access to a channel.\nDispatched when the <code>ThreadMember</code> for the current user is …\nDispatched when anyone is added to or removed from a …\nDispatched when a thread is updated.\nDispatched when a user starts typing.\nDispatched when the bot’s data is updated.\nDispatched when a voice channel’s status is updated.\nDispatched when a guild’s voice server was updated (or …\nDispatched when a user joins, leaves or moves to a voice …\nDispatched when a guild’s webhook is updated.\nSets the initial activity.\nDispatched when an auto moderation rule was triggered and …\nDispatched when an auto moderation rule was triggered and …\nDispatched when an auto moderation rule was created.\nDispatched when an auto moderation rule was created.\nDispatched when an auto moderation rule was deleted.\nDispatched when an auto moderation rule was deleted.\nDispatched when an auto moderation rule was updated.\nDispatched when an auto moderation rule was updated.\nThe cache for the client.\nDispatched when the cache has received and inserted all …\nDispatched when the cache has received and inserted all …\nSets the settings of the cache. Refer to <code>Settings</code> for more …\nDispatched when a category is created.\nDispatched when a category is created.\nDispatched when a category is deleted.\nDispatched when a category is deleted.\nDispatched when a channel is created.\nDispatched when a channel is created.\nDispatched when a channel is deleted.\nDispatched when a channel is deleted.\nDispatched when a pin is added, deleted.\nDispatched when a pin is added, deleted.\nDispatched when a channel is updated.\nDispatched when a channel is updated.\nDispatched when the permissions of an application command …\nDispatched when the permissions of an application command …\nCreates an application emoji with a name and …\nSets the global data type that can be accessed from …\nFetches the data type provided to <code>ClientBuilder::data</code>.\nA container for a data type that can be used across …\nDeletes an application emoji.\nRuns the given <code>EventHandler</code>’s code for this event.\nSets the current user as being <code>DoNotDisturb</code>. This …\nChanges the name of an application emoji.\nDispatched when a user subscribes to a SKU.\nDispatched when a user subscribes to a SKU.\nDispatched when a user’s entitlement has been deleted. …\nDispatched when a user’s entitlement has been deleted. …\nDispatched when a user’s entitlement has been updated, …\nDispatched when a user’s entitlement has been updated, …\nAdds an event handler with multiple methods for each …\nChecks if the <code>event</code> should be dispatched (<code>true</code>) or ignored …\nChecks if the <code>event</code> should be dispatched (<code>true</code>) or ignored …\nChecks if the <code>event</code> should be dispatched (<code>true</code>) or ignored …\nChecks if the <code>event</code> should be dispatched (<code>true</code>) or ignored …\nSets the command framework to be used. It will receive …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets information about an application emoji.\nGets all emojis for the current application.\nGets the cache settings. See <code>Self::cache_settings</code> for more …\nGets the added event handlers. See <code>Self::event_handler</code> for …\nGets the framework, if already initialized. See …\nGets the intents. See <code>Self::intents</code> for more info.\nGets the initial presence. See <code>Self::activity</code> and …\nGets the added raw event handlers. See …\nDispatched when a new audit log entry is created.\nDispatched when a new audit log entry is created.\nDispatched when a user is banned from a guild.\nDispatched when a user is banned from a guild.\nDispatched when a user’s ban is lifted from a guild.\nDispatched when a user’s ban is lifted from a guild.\nDispatched when a guild is created; or an existing guild’…\nDispatched when a guild is created; or an existing guild’…\nDispatched when a guild is deleted.\nDispatched when a guild is deleted.\nDispatched when the emojis are updated.\nDispatched when the emojis are updated.\nDispatched when a guild’s integration is added, updated …\nDispatched when a guild’s integration is added, updated …\nDispatched when a user joins a guild.\nDispatched when a user joins a guild.\nDispatched when a user’s membership ends by leaving, …\nDispatched when a user’s membership ends by leaving, …\nDispatched when a member is updated (e.g their nickname is …\nDispatched when a member is updated (e.g their nickname is …\nDispatched when the data for offline members was requested.\nDispatched when the data for offline members was requested.\nDispatched when a role is created.\nDispatched when a role is created.\nDispatched when a role is deleted.\nDispatched when a role is deleted.\nDispatched when a role is updated.\nDispatched when a role is updated.\nDispatched when a scheduled event is created.\nDispatched when a scheduled event is created.\nDispatched when a scheduled event is deleted.\nDispatched when a scheduled event is deleted.\nDispatched when a scheduled event is updated.\nDispatched when a scheduled event is updated.\nDispatched when a guild member has subscribed to a …\nDispatched when a guild member has subscribed to a …\nDispatched when a guild member has unsubscribed from a …\nDispatched when a guild member has unsubscribed from a …\nDispatched when the stickers are updated.\nDispatched when the stickers are updated.\nDispatched when the guild is updated.\nDispatched when the guild is updated.\nAn HTTP client.\nSets the current user as being <code>Idle</code>. This maintains the …\nDispatched when a guild integration is created.\nDispatched when a guild integration is created.\nDispatched when a guild integration is deleted.\nDispatched when a guild integration is deleted.\nDispatched when a guild integration is updated.\nDispatched when a guild integration is updated.\nSets all intents directly, replacing already set intents. …\nDispatched when an interaction is created (e.g a slash …\nDispatched when an interaction is created (e.g a slash …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the current user as being <code>Invisible</code>. This maintains …\nDispatched when a invite is created.\nDispatched when a invite is created.\nDispatched when a invite is deleted.\nDispatched when a invite is deleted.\nDispatched when a message is created.\nDispatched when a message is created.\nDispatched when a message is deleted.\nDispatched when a message is deleted.\nDispatched when multiple messages were deleted at once.\nDispatched when multiple messages were deleted at once.\nDispatched when a message is updated.\nDispatched when a message is updated.\nConstruct a new builder to call methods on for the client …\nConstruct a new builder with a <code>Http</code> instance to calls …\nSets the current user as being <code>Online</code>. This maintains the …\nDispatched when a user votes on a message poll.\nDispatched when a user votes on a message poll.\nDispatched when a user removes a previous vote on a poll.\nDispatched when a user removes a previous vote on a poll.\nDispatched when a user’s presence is updated (e.g off -&gt; …\nDispatched when a user’s presence is updated (e.g off -&gt; …\nDispatched when an HTTP rate limit is hit\nDispatched when an HTTP rate limit is hit\nDispatched when any event occurs\nDispatched when any event occurs\nAdds an event handler with a single method where all …\nDispatched when a new reaction is attached to a message.\nDispatched when a new reaction is attached to a message.\nDispatched when a reaction is detached from a message.\nDispatched when a reaction is detached from a message.\nDispatched when all reactions of a message are detached …\nDispatched when all reactions of a message are detached …\nDispatched when all reactions of a message are detached …\nDispatched when all reactions of a message are detached …\nDispatched upon startup.\nDispatched upon startup.\n“Resets” the current user’s presence, by setting the …\nDispatched upon reconnection.\nDispatched upon reconnection.\nSets the current activity.\nSets the current user’s presence, providing all fields …\nThe messenger to communicate with the shard runner.\nThe ID of the shard this context is related to.\nA HashMap of all shards instantiated by the Client.\nDispatched when a shard’s connection stage is updated\nDispatched when a shard’s connection stage is updated\nDispatched when every shard has received a Ready event\nDispatched when every shard has received a Ready event\nReturns the name of this event as a snake case string\nDispatched when a stage instance is created.\nDispatched when a stage instance is created.\nDispatched when a stage instance is deleted.\nDispatched when a stage instance is deleted.\nDispatched when a stage instance is updated.\nDispatched when a stage instance is updated.\nEstablish the connection and start listening for events.\nEstablish the connection(s) and start listening for events.\nEstablish a sharded connection and start listening for …\nEstablish a range of sharded connections and start …\nEstablish sharded connections and start listening for …\nSets the initial status.\nDispatched when a thread is created or the current user is …\nDispatched when a thread is created or the current user is …\nDispatched when a thread is deleted.\nDispatched when a thread is deleted.\nDispatched when the current user gains access to a channel.\nDispatched when the current user gains access to a channel.\nDispatched when the <code>ThreadMember</code> for the current user is …\nDispatched when the <code>ThreadMember</code> for the current user is …\nDispatched when anyone is added to or removed from a …\nDispatched when anyone is added to or removed from a …\nDispatched when a thread is updated.\nDispatched when a thread is updated.\nTries to fetch the data type provided to …\nDispatched when a user starts typing.\nDispatched when a user starts typing.\nDispatched when the bot’s data is updated.\nDispatched when the bot’s data is updated.\nDispatched when a voice channel’s status is updated.\nDispatched when a voice channel’s status is updated.\nDispatched when a guild’s voice server was updated (or …\nDispatched when a guild’s voice server was updated (or …\nDispatched when a user joins, leaves or moves to a voice …\nDispatched when a user joins, leaves or moves to a voice …\nDispatched when a guild’s webhook is updated.\nDispatched when a guild’s webhook is updated.\nURL that the client’s shards will use to connect to the …\nIndicates that the client is to send a member chunk …\nIndicates that the client is to close with the given …\nNewtype around a callback that will be called on every …\nIndicator that the <code>Shard</code> is normally connected and is not …\nIndicator that the <code>Shard</code> is connecting and is in, e.g., a …\nIndicates the current connection stage of a <code>Shard</code>.\nIndicator that the <code>Shard</code> is fully disconnected and is not …\nIndicator that the <code>Shard</code> is currently initiating a …\nIndicator that the <code>Shard</code> has sent an IDENTIFY packet and …\nIndicates that the client is to send a custom WebSocket …\nThe type of reconnection that should be performed.\nIndicator that a new connection should be made by sending …\nIndicator that a shard should be restarted.\nIndicator that a new connection should be made by sending …\nIndicator that the <code>Shard</code> has sent a RESUME packet and is …\nIndicates that the client is to update the shard’s …\nIndicates that the client is to update the shard’s …\nMessage to set the shard total.\nIndicates that the client is to update the shard’s …\nA Shard is an abstract handler for a websocket connection …\nA manager for handling the status of shards by starting …\nA handle to a <code>ShardRunner</code>.\nA queue of <code>ShardId</code>s that is split up into multiple buckets …\nThe shard queuer is a simple loop that runs indefinitely …\nA message to be sent to the <code>ShardQueuer</code>.\nA runner for managing a <code>Shard</code> and its respective WebSocket …\nInformation about a <code>ShardRunner</code>.\nA message to send from a shard over a WebSocket.\nOptions to be passed to <code>ShardRunner::new</code>.\nAn event denoting that a shard’s connection stage was …\nMessage to shutdown the shard queuer.\nIndicator that a shard should be fully shutdown without …\nMessage to dequeue/shutdown a shard.\nMessage to start a shard.\nReturns <code>true</code> if every bucket contains at least one <code>ShardId</code>.\nRequests that one or multiple <code>Guild</code>s be chunked.\nRequests that one or multiple <code>Guild</code>s be chunked.\nA copy of <code>Client::data</code> to be given to runners for …\nDoes a heartbeat if needed. Returns false if something …\nA custom drop implementation to clean up after the manager.\nA reference to an <code>EventHandler</code>.\nA copy of the framework\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHandles an event from the gateway over the receiver, …\nReturns whether the shard manager contains either an …\nSends a heartbeat to the gateway with the current sequence.\nReturns the heartbeat interval dictated by Discord, if the …\nSets the shard as going into identifying stage, which sets:\nInitializes all shards that the manager is responsible for.\nReturns the gateway intents used for this gateway …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the stage is a form of connecting.\nRetrieves the value of when the last heartbeat ack was …\nRetrieves the value of when the last heartbeat was sent.\nThe instant that a shard was last started.\nCalculates the heartbeat latency between the shard and the …\nThe latency between when a heartbeat was sent and when the …\nA copy of the <code>ShardManager</code> to communicate with it.\nCreates a new runner for a Shard.\nInstantiates a new instance of a Shard, bypassing the …\nCreates a new shard manager, returning both the manager …\nCreates a new shard messenger.\nThe new connection stage.\nThe old connection stage.\nPops a <code>ShardId</code> from every bucket containing at least one …\nRetrieves the current presence of the shard.\nCalculates the corresponding bucket for the given <code>ShardId</code> …\nCalculates the corresponding bucket for the given <code>ShardId</code> …\nThe shards that are queued for booting.\nA reference to a <code>RawEventHandler</code>.\nErrors\nReinitializes an existing WebSocket client, replacing it.\nRestarts a shard runner.\nErrors\nBegins the shard queuer loop.\nStarts the runner’s loop to receive events.\nThe channel used to communicate with the shard runner, …\nA copy of the map of shard runners.\nThe shard runners currently managed.\nA receiver channel for the shard queuer to be told to …\nSends a message to the shard.\nSets the user’s current activity, if any.\nSets a callback to be called when the gateway receives the …\nSets the user’s full presence information.\nSets the user’s current online status.\nThe ID of the shard that had its connection stage change.\nRetrieves a copy of the current shard information.\nThe total amount of shards to start.\nReturns the <code>ShardId</code>s of the shards that have been …\nPerforms a deterministic reconnect.\nAttempts to shut down the shard runner by Id.\nAttempts to shut down the shard runner by Id.\nSends a shutdown message for all shards that the manager …\nShuts down the websocket by attempting to cleanly close …\nReturns the current connection stage of the shard.\nThe current connection stage of the shard.\nInstant of when the shard was started.\nErrors\nSends a raw message over the WebSocket.\nA copy of the URL to use to connect to the gateway.\nA filter to apply to the returned members.\nThe IDs of the <code>Guild</code> to chunk.\nThe maximum number of members to receive …\nOptional nonce to identify <code>GuildMembersChunkEvent</code> …\nUsed to specify if we want the presences of the matched …\n202 Accepted [RFC7231, Section 6.3.3]\n208 Already Reported [RFC5842]\nThe Id to get the guilds after.\nThe Id to get the users after.\nWhen an application id was expected but missing.\nFiles sent with the form as message attachments.\n502 Bad Gateway [RFC7231, Section 6.6.3]\n400 Bad Request [RFC7231, Section 6.5.1]\nThe Id to get the guilds before.\nThe Id to get the users before.\n409 Conflict [RFC7231, Section 6.5.8]\n100 Continue [RFC7231, Section 6.2.1]\n201 Created [RFC7231, Section 6.3.2]\nThis trait will be required by functions that need <code>Http</code> …\nIndicates that a route is for the <code>DELETE</code> method only.\n417 Expectation Failed [RFC7231, Section 6.5.14]\n424 Failed Dependency [RFC4918]\n403 Forbidden [RFC7231, Section 6.5.3]\n302 Found [RFC7231, Section 6.4.3]\nA file sent with the form data as an individual upload. …\n504 Gateway Timeout [RFC7231, Section 6.6.5]\n410 Gone [RFC7231, Section 6.5.9]\nIndicates that a route is for the <code>GET</code> method only.\nRepresentation of the method of a query to send for the …\n505 HTTP Version Not Supported [RFC7231, Section 6.6.6]\n<strong>Note</strong>: For all member functions that return a <code>Result</code>, the …\nA builder for the underlying <code>Http</code> client that performs …\n418 I’m a teapot [curiously not registered by IANA but …\n226 IM Used [RFC3229]\n507 Insufficient Storage [RFC4918]\n500 Internal Server Error [RFC7231, Section 6.6.1]\nHeader value contains invalid input.\nWhen parsing a Webhook fails due to invalid input.\n411 Length Required [RFC7231, Section 6.5.10]\n423 Locked [RFC4918]\n508 Loop Detected [RFC5842]\nAn method used for ratelimiting special routes.\n405 Method Not Allowed [RFC7231, Section 6.5.5]\n421 Misdirected Request RFC7540, Section 9.1.2\n301 Moved Permanently [RFC7231, Section 6.4.2]\n300 Multiple Choices [RFC7231, Section 6.4.1]\n207 Multi-Status [RFC4918]\nHolder for multipart body. Contains upload data, multipart …\n511 Network Authentication Required [RFC6585]\n203 Non-Authoritative Information [RFC7231, Section 6.3.4]\n406 Not Acceptable [RFC7231, Section 6.5.6]\n510 Not Extended [RFC2774]\n404 Not Found [RFC7231, Section 6.5.4]\n501 Not Implemented [RFC7231, Section 6.6.2]\n304 Not Modified [RFC7232, Section 4.1]\n204 No Content [RFC7231, Section 6.3.5]\n200 OK [RFC7231, Section 6.3.1]\n206 Partial Content [RFC7233, Section 4.1]\n413 Payload Too Large [RFC7231, Section 6.5.11]\n402 Payment Required [RFC7231, Section 6.5.2]\n308 Permanent Redirect [RFC7238]\n412 Precondition Failed [RFC7232, Section 4.2]\n428 Precondition Required [RFC6585]\n102 Processing [RFC2518]\n407 Proxy Authentication Required [RFC7235, Section 3.2]\nIndicates that a route is for the <code>PATCH</code> method only.\nIndicates that a route is for the <code>POST</code> method only.\nIndicates that a route is for the <code>PUT</code> method only.\n416 Range Not Satisfiable [RFC7233, Section 4.4]\n431 Request Header Fields Too Large [RFC6585]\n408 Request Timeout [RFC7231, Section 6.5.7]\n205 Reset Content [RFC7231, Section 6.3.6]\nWhen the decoding of a ratelimit header could not be …\nWhen the decoding of a ratelimit header could not be …\nA set of data containing information about the ratelimits …\nPassed to the <code>Ratelimiter::set_ratelimit_callback</code> …\nRatelimiter for requests to the Discord API.\nUsed to group requests together for ratelimiting.\nUsed to group requests together for ratelimiting.\nReqwest’s Error contain information on why sending a …\n303 See Other [RFC7231, Section 6.4.4]\n503 Service Unavailable [RFC7231, Section 6.6.4]\n101 Switching Protocols [RFC7231, Section 6.2.2]\nAn HTTP status code (<code>status-code</code> in RFC 7230 et al.).\n307 Temporary Redirect [RFC7231, Section 6.4.7]\n429 Too Many Requests [RFC6585]\nA struct to start typing in a <code>Channel</code> for an indefinite …\n401 Unauthorized [RFC7235, Section 3.1]\n451 Unavailable For Legal Reasons [RFC7725]\n422 Unprocessable Entity [RFC4918]\n415 Unsupported Media Type [RFC7231, Section 6.5.13]\n426 Upgrade Required [RFC7231, Section 6.5.15]\n414 URI Too Long [RFC7231, Section 6.5.12]\n305 Use Proxy [RFC7231, Section 6.4.5]\nWhen a non-successful status code was received for a …\nWhen parsing an URL failed due to invalid input.\nRepresentation of the method of a query to send for the …\n506 Variant Also Negotiates [RFC2295]\nAdds a <code>User</code> to a <code>Guild</code> with a valid OAuth2 access token.\nAdds a single <code>Role</code> to a <code>Member</code> in a <code>Guild</code>.\nAdds a member to a thread channel.\nSets the application_id to use interactions.\nReturns a &amp;str representation of the <code>StatusCode</code>\nReturns the <code>u16</code> corresponding to this <code>StatusCode</code>.\nBans a <code>User</code> from a <code>Guild</code>, removing their messages sent in …\nBroadcasts that the current user is typing in the given …\nUse the given configuration to build the <code>Http</code> client.\nErrors\nBans multiple users from a <code>Guild</code>, optionally removing …\nGet the standardised <code>reason-phrase</code> for this status code.\nSets the <code>reqwest::Client</code>. If one isn’t provided, a …\nThe error code.\nThe error code.\nCreates an application emoji with the given data.\nCreates an auto moderation rule in a guild.\nCreates a <code>GuildChannel</code> in the <code>Guild</code> given its Id.\nCreates an emoji in the given <code>Guild</code> with the given data.\nCreate a follow-up message for an Interaction.\nCreates a forum post channel in the <code>GuildChannel</code> given its …\nCreates a new global command.\nCreates new global application commands.\nCreates a guild with the data provided.\nCreates a new guild command.\nCreates new guild application commands.\nCreates an <code>Integration</code> for a <code>Guild</code>.\nCreates a response to an <code>Interaction</code> from the gateway.\nCreates a <code>RichInvite</code> for the given channel.\nCreates a permission override for a member or a role in a …\nCreates a private channel with a user.\nReacts to a message.\nCreates a role.\nCreates a Guild Scheduled Event.\nCreates a stage instance.\nCreates a sticker.\nSuper reacts to a message.\nCreates a test entitlement to a given SKU for a given …\nCreates a thread channel not attached to a message in the …\nCreates a thread channel in the <code>GuildChannel</code> given its Id, …\nCreates a webhook for the given <code>GuildChannel</code>’s Id, …\nCrossposts a message by Id.\nSets the <code>CreateAllowedMentions</code> used by default for each …\nDeletes an application emoji.\nDeletes an auto moderation rule in a guild.\nDeletes a private channel or a channel in a guild.\nDeletes an emoji from a guild.\nDeletes a follow-up message for an interaction.\nDeletes a global command.\nDeletes a guild, only if connected account owns it.\nDeletes a guild command.\nRemoves an integration from a guild.\nDeletes an invite by code.\nDeletes a message if created by us or we have specific …\nDeletes all the reactions for a given emoji on a message.\nDeletes all of the <code>Reaction</code>s associated with a <code>Message</code>.\nDeletes a bunch of messages, only works for bots.\nDeletes the initial interaction response.\nDeletes a permission override from a role or a member in a …\nDeletes a user’s reaction from a message.\nDeletes a reaction by the current user from a message.\nDeletes a role from a server. Can’t remove the default …\nDeletes a [Scheduled Event] from a server.\nDeletes a stage instance.\nDeletes a sticker from a server.\nDeletes a currently active test entitlement. Discord will …\nDeletes a <code>Webhook</code> given its Id.\nDeletes a webhook’s message by Id.\nDeletes a <code>Webhook</code> given its Id and unique token.\nChanges application emoji information.\nRetrieves an auto moderation rule in a guild.\nChanges channel information.\nChanges guild emoji information.\nEdits a follow-up message for an interaction.\nEdits a global command.\nChanges guild information.\nEdits the positions of a guild’s channels.\nEdits a guild command.\nEdits a guild command permissions.\nEdits the MFA level of a guild. Requires guild ownership.\nEdits a guild welcome screen.\nEdits a <code>Guild</code>’s widget.\nDoes specific actions to a member.\nEdits the current member for the provided <code>Guild</code> via its Id.\nEdits a message by Id.\nEdits the current user’s nickname for the provided <code>Guild</code> …\nEdits the initial interaction response.\nEdits the current user’s profile settings.\nChanges a role in a guild.\nChanges the positions of roles in a guild.\nModifies a scheduled event.\nEdits a stage instance.\nChanges a sticker in a guild.\nEdits a thread channel in the <code>GuildChannel</code> given its Id.\nChanges another user’s voice state in a stage channel.\nChanges the current user’s voice state in a stage …\nEdits a the webhook with the given data.\nEdits a webhook’s message by Id.\nEdits the webhook with the given data.\nThe full explained errors with their path in the request …\nExecutes a webhook, posting a <code>Message</code> in the webhook’s …\nMultipart text fields that are sent with the form data as …\nFires off a request, deserializing the response reader via …\nFollow a News Channel to send messages to a target channel.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a &amp;u8 to a status code\nConverts a u16 to a status code.\nGets the active maintenances from Discord’s Status API.\nGets information about an application emoji.\nGets all emojis for the current application.\nGets all audit logs in a specific guild.\nRetrieves an auto moderation rule in a guild.\nRetrieves all auto moderation rules in a guild.\nGets all the users that are banned in specific guild, with …\nGets current bot gateway.\nGets channel information.\nGets all archived private threads from a channel.\nGets all archived public threads from a channel.\nGets all invites for a channel.\nGets all archived private threads joined from a channel.\nGets all thread members for a thread.\nRetrieves the webhooks for the given channel’s Id.\nGets all channels in a guild.\nGets information about the current application.\nGets information about the user we’re connected with.\nReturns a guild <code>Member</code> object for the current user.\nGets information about an emoji in a guild.\nGets all emojis of a guild.\nGets all entitlements for the current app, active and …\nGet a follow-up message for an interaction.\nGets current gateway.\nFetches a global commands for your application by its Id.\nFetches all of the global commands for your application.\nFetches all of the global commands for your application …\nGets guild information.\nGets all active threads from a guild.\nFetches a guild command by its Id.\nGives the guild command permission for your application …\nFetches all of the guild commands for your application for …\nFetches all of the guild commands permissions for your …\nFetches all of the guild commands with localizations for …\nGets integrations that a guild has.\nGets all invites to a guild.\nGets the members of a guild. Optionally pass a <code>limit</code> and …\nGets a guild preview.\nGets the amount of users that can be pruned.\nGets regions that a guild can use. If a guild has the …\nRetrieves a list of roles in a <code>Guild</code>.\nRetrieves a single sticker in a <code>Guild</code>.\nRetrieves a list of stickers in a <code>Guild</code>.\nGets a guild’s vanity URL if it has one.\nRetrieves the webhooks for the given <code>Guild</code>’s Id.\nGets a guild welcome screen information.\nGets a guild widget information.\nGets guild information with counts.\nGets a paginated list of the current user’s guilds.\nGets information about a specific invite.\nGets member of a guild.\nGets a message by an Id, bots only.\nGets X messages from a channel.\nRetrieves a list of all nitro sticker packs.\nGets the initial interaction response.\nGets all pins of a channel.\nGet a list of users that voted for this specific answer.\nGets user Ids based on their reaction to a message. This …\nGets a scheduled event by Id.\nGets a list of all interested users for the corresponding …\nGets a list of all scheduled events for the corresponding …\nGets all SKUs for the current application.\nGets a stage instance.\nGets a sticker.\nGets the current unresolved incidents from Discord’s …\nGets the upcoming (planned) maintenances from Discord’s …\nGets a user by Id.\nGets the current user’s third party connections.\nGets our DM channels.\nGets all voice regions.\nRetrieves a webhook given its Id.\nRetrieves a webhook given its url.\nRetrieves a webhook given its Id and unique token.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if status is within 400-499.\nCheck if status is within 100-199.\nReturns true when the error is caused by an invalid header\nCheck if status is within 300-399.\nCheck if status is within 500-599.\nCheck if status is within 200-299.\nReturns true when the error is caused by an unsuccessful …\nReturns true when the error is caused by the url …\nJoins a thread channel.\nKicks a member from a guild with a provided reason.\nLeaves a guild.\nLeaves a thread channel.\nThe total number of requests that can be made in a period …\nThe error message.\nThe error message.\nConstruct a new builder to call methods on for the HTTP …\nCreates a new ratelimiter, with a shared <code>reqwest</code> client …\nThe path to the error in the request body itself, dot …\nJSON body that will set as the form value as <code>payload_json</code>.\nErrors\nPins a message in a channel.\nErrors\nSets the proxy that Discord HTTP API requests will be …\nSets the ratelimiter to be used. If one isn’t provided, …\nSets whether or not the ratelimiter is disabled. By …\nThe number of requests remaining in the period of time.\nUnbans a user from a guild.\nDeletes a single <code>Role</code> from a <code>Member</code> in a <code>Guild</code>.\nRemoves a member from a thread channel.\nPerforms a request, ratelimiting it if necessary.\nThe absolute time in milliseconds when the interval resets.\nThe total time in milliseconds when the interval resets.\nThe routes mutex is a HashMap of each <code>RatelimitingBucket</code> …\nReturns a list of <code>Member</code>s in a <code>Guild</code> whose username or …\nSends a message to a channel.\nSets a callback to be called when a route is rate limited.\nStarts typing in the specified <code>Channel</code> for an indefinite …\nStarts removing some members from a guild based on the …\nStarts syncing an integration with a guild.\nReturns the status code if the error is an unsuccessful …\nStops typing in <code>Channel</code>.\nSets a token for the bot. If the token is not prefixed “…\nUnpins a message from a channel.\nModels about OAuth2 applications.\nModels relating to channels and types within channels.\nModels for user connections.\nError enum definition wrapping potential model …\nAll the events this library handles.\nModels pertaining to the gateway.\nModels relating to guilds and types that it owns.\nA collection of newtypes defining type-strong IDs.\nModels for server and channel invites.\nMiscellaneous helper traits, enums, and structs for models.\nA set of permissions for a role or user. These can be …\nThe model prelude re-exports all types in the model …\nUtilities for parsing and formatting RFC 3339 timestamps.\nUser information-related models.\nRepresentations of voice information.\nWebhook model and implementations.\nIndicates if an app uses the Auto Moderation API\nIndicates if an app has registered global application …\nAn action row.\nA component which can be inside of an <code>ActionRow</code>.\nAllows your app to fetch data from a user’s “Now …\nAllows your app to update a user’s activity - requires …\nThe flags of the application.\nAllows your app to read build data for a user’s …\nAllows your app to upload/update builds for a user’s …\nAllows your app to use Slash Commands in a guild.\nAllows your app to update permissions for its commands in …\nAllows your app to update its Slash Commands via this …\nAllows your app to read entitlements for a user’s …\nAllows your app to read and update store data (SKUs, store …\nThe focused option for autocomplete interactions return by …\nFor oauth2 bots, this puts the bot in the user’s …\nA button component.\nThe style of a button.\nThe base command model that belongs to an application.\nThe command data payload.\nA set of a parameter and a value from the user.\nThe value of an <code>CommandDataOption</code>.\nThe resolved data of a command data interaction payload. …\nThe base command model that belongs to an application.\nAn interaction when a user invokes a slash command.\nThe parameters for an <code>Command</code>.\nThe only valid values a user can pick in an <code>CommandOption</code>.\nThe type of an <code>CommandOption</code>.\nThe <code>CommandPermission</code> data.\nThe type of a <code>CommandPermission</code>.\nAn <code>Command</code> permission.\nThe type of an application command.\nAn interaction triggered by a message component.\nA message component interaction data, provided by …\nThe type of a component\nAllows <code>/users/@me/connections</code> to return linked third-party …\nInformation about the current application and its owner.\nAllows your app to see information about the user’s DMs …\nIndicates if an app is embedded within the Discord client …\nInteraction message will only be visible to sender and will\nEnables <code>/users/@me</code> to return an <code>email</code> field.\nIntent required for bots in 100 or more servers to receive …\nIntent required for bots in under 100 servers to receive …\nIntent required for bots in 100 or more servers to receive …\nIntent required for bots in under 100 servers to receive …\nIntent required for bots in 100 or more servers to receive …\nIntent required for bots in under 100 servers to receive …\nAllows your app to join users to a group dm.\nAllows <code>/users/@me/guilds</code> to return basic information about …\nAllows <code>/guilds/{guild.id}/members/{user.id}</code> to be used for …\nAllows <code>/users/@me/guilds/{guild.id}/member</code> to return a user…\nAllows <code>/users/@me</code> without <code>Self::Email</code>.\nAn input text component for modal interactions\nThe style of the input text\nSettings for the application’s default in-app …\nDiscord docs\nThe flags for an interaction response message.\nThe type of an Interaction.\nDiscord docs.\nSent when a <code>Message</code> is a response to an <code>Interaction</code>.\nFor local rpc server api access, this allows you to read …\nAn interaction triggered by a modal submit.\nA modal submit interaction data, provided by …\nPartial information about the given application.\nA ping interaction, which can only be received through an …\nAllows your app to know a user’s friends and implicit …\nThe resolved value of a <code>CommandData::target_id</code>.\nThe resolved value of a <code>CommandDataOption</code>.\nAllows your app to update a user’s connection and …\nFor local rpc server access, this allows you to control a …\nFor local rpc server api access, this allows you to …\nDo not include any embeds when serializing this message.\nDoes not trigger push notifications or desktop …\nThe available OAuth2 Scopes.\nA select menu component.\nA select menu component options.\nInformation about the Team group of the application.\nInformation about a Member on a Team.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value for unknown option types.\nOption value variants that couldn’t be resolved by …\nIndicates unusual growth of an app that prevents …\nAllows your app to connect to voice on user’s behalf and …\nThis generates a webhook that is returned in the oauth …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nPermissions the app or bot has within the channel the …\nPermissions the app or bot has within the channel the …\nPermissions the app or bot has within the channel the …\nPermissions the app or bot has within the channel the …\nGets the interaction application Id\nThe parent application Id.\nThe parent application Id.\nThe id of the application the command belongs to.\nId of the application this interaction is for.\nId of the application this interaction is for.\nId of the application this interaction is for.\nId of the application this interaction is for.\nIf the value is an <code>AttachmentId</code>, returns the associated …\nConverts this to a <code>CommandInteraction</code>\nIf the value is a boolean, returns the associated f64. …\nIf the value is an <code>ChannelId</code>, returns the associated ID. …\nConverts this to an <code>CommandInteraction</code>\nIf the value is a number, returns the associated f64. …\nIf the value is an integer, returns the associated f64. …\nIf the value is an <code>GenericId</code>, returns the associated ID. …\nConverts this to a <code>ComponentInteraction</code>\nConverts this to a <code>ModalInteraction</code>\nConverts this to a <code>PingInteraction</code>\nIf the value is an <code>RoleId</code>, returns the associated ID. …\nIf the value is a string, returns the associated str. …\nIf the value is an <code>UserId</code>, returns the associated ID. …\nThe resolved attachments.\nReturns the autocomplete option from <code>CommandData::options</code>.\nConverts this to a <code>CommandInteraction</code>\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nChannel that the interaction was sent from.\nChannel that the interaction was sent from.\nChannel that the interaction was sent from.\nThe channel Id this interaction was sent from.\nThe channel Id this interaction was sent from.\nThe channel Id this interaction was sent from.\nIf the option is a <code>Channel</code>, it will only be able to show …\nList of channel types to include in the …\nThe resolved partial channels.\nChoices the user can pick from.\nConverts this to an <code>CommandInteraction</code>\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe components of this ActionRow.\nThe components.\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nCreates a followup response to the response sent.\nCreates a followup response to the response sent.\nCreates a followup response to the response sent.\nCreate a global <code>Command</code>, overriding an existing one with …\nCreates a response to the interaction received.\nCreates a response to the interaction received.\nCreates a response to the interaction received.\nAn identifier defined by the developer for the select menu.\nDeveloper-defined identifier for the input; max 100 …\nThe custom id of the component.\nThe custom id of the modal\nThe data of the interaction which was triggered.\nThe button kind and style.\nThe data of the interaction which was triggered.\nThe data of the interaction which was triggered.\nRender this option as the default selection.\nThe default permissions required to execute the command.\nThe default permissions required to execute the command.\nHelper function to defer an interaction.\nHelper function to defer an interaction.\nHelper function to defer an interaction.\nHelper function to defer an interaction ephemerally\nHelper function to defer an interaction ephemerally\nHelper function to defer an interaction ephemerally\nDeletes a followup message.\nDeletes a followup message.\nDeletes a followup message.\nDeletes a global command by its Id.\nDeletes the initial interaction response.\nDeletes the initial interaction response.\nDeletes the initial interaction response.\nThe command description.\nThe command description.\nThe option description.\nThe description shown for this option.\nAll localized command descriptions.\nAll localized command descriptions.\nLocalizations of the option description with locale as the …\nThe localized command description of the selected locale.\nThe localized command description of the selected locale.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nWhether the button is disabled.\nWhether select menu is disabled.\nIndicates whether the command is available in DMs with the …\nIndicates whether the command is available in DMs with the …\nEdits a followup response to the response sent.\nEdits a followup response to the response sent.\nEdits a followup response to the response sent.\nEdit a global command, given its Id.\nEdits the initial interaction response.\nEdits the initial interaction response.\nEdits the initial interaction response.\nThe emoji of this button, if there is one.\nThe emoji displayed on this option.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nFor monetized applications, gets the invoking user’s …\nFor monetized applications, any entitlements of the …\nFor monetized applications, any entitlements of the …\nFor monetized applications, any entitlements of the …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe flags associated with the application.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGets a followup message.\nGets a followup message.\nGets a global command by its Id.\nGets all global commands.\nGets all global commands with localizations.\nGets the interaction response.\nGets the interaction response.\nGets the interaction response.\nThe command guild Id, if it is a guild command.\nThe command guild Id, if it is a guild command.\nThe id of the guild.\nThe guild Id this interaction was sent from, if there is …\nThe Id of the guild the command is registered to.\nThe guild Id this interaction was sent from, if there is …\nThe guild Id this interaction was sent from, if there is …\nGets the invoked guild locale.\nThe guild’s preferred locale.\nThe guild’s preferred locale.\nThe guild’s preferred locale.\nThe icon of the team.\nGets the interaction Id.\nThe command Id.\nThe command Id.\nThe id of the command.\nThe <code>RoleId</code> or <code>UserId</code>, depends on <code>kind</code> value.\nId of the interaction.\nThe Id of the invoked command.\nId of the interaction.\nThe id of the interaction.\nId of the interaction.\nId of the interaction.\nThe unique Id of the user.\nThe snowflake ID of the team.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this to a <code>CommandInteraction</code>\nConverts this to an <code>CommandInteraction</code>\nConverts this to a <code>ComponentInteraction</code>\nConverts this to a <code>ModalInteraction</code>\nConverts this to a <code>PingInteraction</code>\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nGets the interaction type\nThe application command kind.\nThe application command kind.\nThe option type.\nThe type of data this permissions applies to.\nThe application command type of the triggered application …\nAlways <code>ComponentType::ActionRow</code>\nThe component type, it will always be <code>ComponentType::Button</code>…\nThe component type, which may either be …\nThe component type, it will always be …\nType and type-specific data of this component interaction.\nThe type of the interaction.\nThe text which appears on the button.\nThe text displayed on this option.\nLabel for this component; max 45 characters. Required when …\nThe selected language of the invoking user.\nThe selected language of the invoking user.\nThe selected language of the invoking user.\nMaximum permitted length for String options\nMaximum input length for a text input; min 1, max 4000\nMaximum permitted value for Integer or Number options\nThe maximum number of selections allowed.\nThe <code>member</code> data for the invoking user.\nThe <code>member</code> data for the invoking user.\nThe member who invoked the interaction in the guild.\nThe <code>member</code> data for the invoking user.\nThe resolved partial members.\nThe members of the team\nThe member’s membership state.\nThe message this interaction was triggered by, if it is a …\nThe message this interaction was triggered by\nConverts this to a <code>ComponentInteraction</code>\nThe resolved messages.\nMinimum permitted length for String options\nMinimum input length for a text input; min 0, max 4000\nMinimum permitted value for Integer or Number options\nThe minimum number of selections allowed.\nConverts this to a <code>ModalInteraction</code>\nThe command name.\nThe command name.\nThe option name.\nThe choice name.\nThe name of the invoked command.\nThe name of the parameter.\nThe name of the <code>Command</code>.\nThe name of the team.\nAll localized command names.\nAll localized command names.\nLocalizations of the option name with locale as the key\nLocalizations of the choice name, with locale as key\nThe localized command name of the selected locale.\nThe localized command name of the selected locale.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nIndicates whether the command is age-restricted, defaults …\nIndicates whether the command is age-restricted, defaults …\nReturns the resolved options from <code>CommandData::options</code> and …\nThe parameters for the command.\nThe parameters for the command.\nThe nested options.\nThe options of this select menu.\nThe user id of the team owner.\nWhether or not the provided data can use the command or …\nThe permissions for the command in the guild.\nConverts this to a <code>PingInteraction</code>\nThe placeholder shown when nothing is selected.\nCustom placeholder text if the input is empty; max 100 …\nSee <code>CreateQuickModal</code>.\nSee <code>CreateQuickModal</code>.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nWhether the parameter is optional or required.\nWhether this component is required to be filled (defaults …\nThe parameters and the given values. The converted objects …\nThe <code>TeamMemberRole</code> of the team member.\nThe application’s role connection verification entry …\nThe resolved roles.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets the dm_permission to the value provided.\nOverride all global application commands.\nSets the nsfw to the value provided.\nReturns the store url for the application. If included in …\nThe <code>InputTextStyle</code>. Required when sending modal data.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe target resolved data of <code>target_id</code>\nThe targeted user or message, if the triggered application …\nThe ID of the team they are a member of.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGets the interaction token.\nA continuation token for responding to the interaction.\nA continuation token for responding to the interaction.\nA continuation token for responding to the interaction.\nA continuation token for responding to the interaction.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe <code>user</code> object for the invoking user.\nThe <code>user</code> object for the invoking user.\nThe user who invoked the interaction.\nThe <code>user</code> object for the invoking user.\nThe user type of the team member.\nThe resolved users.\nThe choice value.\nThe given value.\nThe value to be sent for this option.\nWhen sending: Pre-filled value for this component; max …\nAn autoincremented version identifier updated during …\nAn autoincremented version identifier updated during …\nAlways <code>1</code>.\nAlways <code>1</code>.\nAlways <code>1</code>.\nAlways <code>1</code>.\nA file uploaded with a message. Not to be confused with …\nAn indicator that the video quality is chosen by Discord …\nSee <code>ThreadMetadata::auto_archive_duration</code>.\nA message from an auto moderation action.\nThis message has been published to subscribed channels …\nAn indicator that the channel is a channel category.\nA container for any channel.\nDescribes extra features of the channel.\nAn indicator that the channel is now following a news …\nDiscord docs.\nA representation of a type of channel.\nA slash command.\nA context menu command.\nA representation of reaction count details.\nSort forum posts by creation time (from most recent to …\nA reaction with a <code>Guild</code>s custom <code>Emoji</code>, which is unique to …\nAn indicator that the channel is a directory <code>GuildChannel</code> …\nThis message is only visible to the user who invoked the …\nRepresents a rich embed which allows using richer …\nAn author object in an embed.\nA field object in an embed.\nFooter information for an embed.\nAn image object in an embed.\nThe provider of an embed.\nThe dimensions and URL of an embed thumbnail.\nVideo information for an embed.\nThis message failed to mention some roles and add their …\nA container for the IDs returned by following a news …\nAn indicator that the channel is a forum <code>GuildChannel</code>.\nAn object that specifies the emoji to use for Forum …\nSee <code>GuildChannel::default_forum_layout</code>.\nAn object that represents a tag able to be applied to a …\nAn indicator that the video quality is 720p.\nDisplay posts as a collection of tiles.\nAn indicator that a call was started by the author.\nAn indicator that the channel is a group DM.\nAn indicator that the group icon was modified by the …\nAn indicator that the group name was modified by the …\nAn indicator that a recipient was added by the author.\nAn indicator that a recipient was removed by the author.\nA channel within a <code>Guild</code>.\nRepresents a guild’s text, news, or voice channel. Some …\nAn indicator that the guild is disqualified for Discovery …\nThe last warning before guild discovery removal.\nThe first warning before guild discovery removal.\nAn indicator that the guild is requalified for Discovery …\nServer setup tips.\nThe Stage instance is visible to only guild members.\nThis message has an associated thread, with the same id as …\nThis message originated from a message in another channel …\nThis message is a voice message.\nThe id of a guild’s custom emoji.\nA message reply.\nThis message is an Interaction Response and the bot is “…\nSort forum posts by activity.\nDisplay posts as a list.\nA member which is having its permission overwrites edited.\nAn indicator that a member joined the guild.\nA representation of a message over a guild’s text …\nRich Presence activity information.\nDiscord docs.\nRich Presence application information.\nDescribes extra features of the message.\nA representation of a message over a guild’s text …\nA representation of a reaction to a message.\nReference data sent with crossposted messages.\nDifferentiates between regular and different types of …\nA helper class returned by <code>ChannelId::messages_iter</code>\nThe unicode character of the emoji.\nAn indicator that the channel is a <code>NewsChannel</code>.\nAn indicator that the channel is a news thread <code>GuildChannel</code>…\nAn indicator that someone has boosted the guild.\nAn indicator that the guild has reached nitro tier 1\nAn indicator that the guild has reached nitro tier 2\nAn indicator that the guild has reached nitro tier 3\nNo default has been set for forum channel.\nThis thread is pinned to the top of its parent GUILD_FORUM …\nA container for any partial channel.\nA partial guild channel.\nA channel-specific permission overwrite for a member or …\nThe type of edit being made to a Channel’s permissions.\nAn indicator that a message was pinned by the author.\nA poll that has been attached to a <code>Message</code>.\nA possible answer for a <code>Poll</code>.\nThe count of a single <code>PollAnswer</code>’s results.\nRepresents the different layouts that a <code>Poll</code> may have.\nA piece of data used in mutliple parts of the <code>Poll</code> …\nThe “Partial Emoji” attached to a <code>PollMedia</code> model.\nThe model for the results of a <code>Poll</code>.\nA private channel to another <code>User</code> (Direct Message). No …\nAn indicator that the channel is a <code>PrivateChannel</code>.\nA Direct Message text channel with another user.\nAn indicator that the channel is a private thread …\nThe Stage instance is visible publicly. (deprecated)\nAn indicator that the channel is a public thread …\nWhether a tag is required to be specified when creating a …\nAn emoji reaction to a message.\nThe type of a <code>Reaction</code> sent.\nA list of types a reaction can be.\nA regular message.\nA role which is having its permission overwrites edited.\nDiscord docs\nThe source message for this crosspost has been deleted …\nDo not include any embeds when serializing this message.\nThis message will not trigger push and desktop …\nThe sort order for threads in a forum.\nAn indicator that the channel is a stage <code>GuildChannel</code>.\nDiscord docs.\nSee <code>StageInstance::privacy_level</code>.\nAn indicator that the channel is a text <code>GuildChannel</code>.\nMessage sent to inform users that a thread was created.\nA thread data.\nA thread data.\nA thread start message.\nA response to getting several threads channels.\nThis message came from the urgent message system.\nA reaction with a twemoji.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nVariant value is unknown.\nThe video quality mode for a voice channel.\nAn indicator that the channel is a voice <code>GuildChannel</code>.\nSent with Rich Presence-related chat embeds.\nSent with Rich Presence-related chat embeds.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nSent with Rich Presence-related chat embeds.\nSent with Rich Presence-related chat embeds.\nIf the message is an Interaction or application-owned …\nIf the message is an Interaction or application-owned …\nThe set of applied tags.\nThe last time the thread’s archive status was last …\nThe last time the thread’s archive status was last …\nWhether the thread is archived.\nWhether the thread is archived.\nCreates a data-esque display of the type. This is not very …\nAn vector of the files attached to a message.\nAn vector of the files attached to a message.\nInformation about the author of the embed.\nThe user that sent the message.\nThe user that sent the message.\nTries to return author’s nickname in the current channel…\nDuration in minutes to automatically archive the thread …\nDuration in minutes to automatically archive the thread …\nThe set of available tags.\nReturns a builder which can be awaited to obtain a single …\nSame as <code>Self::await_component_interaction</code>.\nReturns a builder which can be awaited to obtain a model …\nSame as <code>Self::await_modal_interaction</code>.\nReturns a stream builder which can be awaited to obtain a …\nReturns a builder which can be awaited to obtain a …\nSame as <code>Self::await_reaction</code>.\nSame as <code>Self::await_reaction</code>.\nSame as <code>Self::await_reply</code>.\nReturns a builder which can be awaited to obtain a message …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitrate of the channel.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nBroadcasts to the channel that the current user is typing.\nBroadcasts that the current user is typing to the …\nIndicates if this was a super reaction.\nColours used for the super reaction animation.\nIf this is a category channel, returns it.\nRetrieves the message channel’s category ID if the …\nFirst attempts to find a <code>Channel</code> by its Id in the cache, …\nRetrieves the associated the reaction was made in.\nThe Id of the <code>Channel</code> that the message was sent to.\nThe Id of the <code>Channel</code> that the message was sent to.\nID of the originating message’s channel.\nThe source news channel\nThe <code>Channel</code> of the associated <code>Message</code>.\nThe Id of the associated stage channel.\nThe colour code of the embed.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe components of this message\nThe components of this message\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe content of the message.\nThe content of the message.\nReturns message content, but with user and role mentions …\nThe attachment’s media type.\nThe amount of the type of reaction that have been sent for …\nA breakdown of what reactions were from regular reactions …\nID of the embed’s image asset.\nCreates a post in a forum channel.\nCreates an invite for the given channel.\nCreates a permission overwrite for either a single <code>Member</code> …\nReact to a <code>Message</code> with a custom <code>Emoji</code> or unicode …\nCreates a stage instance.\nCreates a thread that is not connected to a message.\nCreates a public thread that is connected to a message.\nTimestamp when the thread was created.\nTimestamp when the thread was created.\nCreates a webhook in the channel.\nCrossposts this message.\nDefault duration for newly created threads, in minutes, to …\nThe default forum layout view used to display posts in a …\nThe emoji to show in the add reaction button\nThe default sort order type used to order posts\nThe initial <code>rate_limit_per_user</code> to set on newly created …\nDeletes this channel, returning the channel on a …\nDeletes the message.\nDeletes the channel. This does not delete the contents of …\nDeletes the reaction, but only if the current user is the …\nDeletes the inner channel.\nDeletes all reactions from the message with this emoji.\nDeletes all messages by Ids from the given vector in the …\nDeletes all messages by Ids from the given vector in the …\nDeletes all permission overrides in the channel from a …\nDeletes all permission overrides in the channel from a …\nDeletes the given <code>Reaction</code> from the channel.\nDeletes the given <code>Reaction</code> from the message.\nDeletes the given <code>Reaction</code> from the channel.\nDeletes all of the <code>Reaction</code>s of a given emoji associated …\nDeletes all of the <code>Reaction</code>s associated with the provided …\nDeletes all of the <code>Reaction</code>s associated with the message.\nDeletes a stage instance.\nDescription for the file (max 1024 characters).\nThe description of the embed.\nApplication’s description.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nIf this attachment is an image, then a tuple of the width …\nWhether or not Stage Discovery is disabled (deprecated).\nDownloads the attachment, returning back a vector of bytes.\nThe duration of the audio file (present if …\nEdits the channel’s settings.\nEdits this message, replacing the original content with …\nEdits a <code>Message</code> in the channel given its Id.\nEdits a <code>Message</code> in the channel given its Id.\nEdits the current user’s voice state in a stage channel.\nEdits the stage instance\nEdits a thread.\nEdits the voice state of a given user in a stage channel.\nThe timestamp of the last time the message was updated, if …\nThe timestamp of the last time the message was updated, if …\nArray of embeds sent with the message.\nArray of embeds sent with the message.\nThe reactive emoji used.\nThe emoji to display next to the tag.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nEnds the <code>Poll</code> on this message, if there is one.\nWhether this attachment is ephemeral.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nWhen sending, whether to error if the referenced message …\nThe array of fields.\nThe filename of the file that was uploaded. This is …\nExtra information about the channel\nBit flags describing extra features of the message.\nBit flags describing extra features of the message.\nFormats the channel, creating a mention of it.\nFormats the private channel, displaying the recipient’s …\nFormats the reaction type, displaying the associated emoji …\nFormats the channel into a “mentioned” string.\nFollows the News Channel\nFooter information for the embed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>ReactionType</code> from a <code>char</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGets a stage instance.\nAttempts to find this channel’s guild in the Cache.\nReturns the associated <code>Guild</code> for the message if one is in …\nConverts from <code>Channel</code> to <code>Option&lt;GuildChannel&gt;</code>.\nFirst attempts to find the <code>GuildChannel</code> by it’s Id in …\nThe Id of the guild the channel is located in.\nThe channel guild Id.\nThe Id of the <code>Guild</code> that the message was sent in. This …\nThe Id of the <code>Guild</code> that the message was sent in. This …\nID of the originating message’s guild.\nID of the guild containing the channel.\nThe optional Id of the <code>Guild</code> where the reaction was sent.\nThe guild Id of the associated stage channel.\nThe id of the scheduled event for this Stage instance.\nWhether there are potentially more threads that could be …\nIf the attachment is an image, then the height of the …\nThe height of the image.\nThe height of the thumbnail in pixels.\nThe height of the video in pixels.\nID of the application’s icon.\nThe URL of the author icon.\nThe URL of the footer icon.\nRetrieves the Id of the inner <code>GuildChannel</code>, or …\nThe unique ID given to this attachment.\nThe unique Id of the channel.\nThe channel Id.\nThe unique Id of the message. Can be used to calculate the …\nThe unique Id of the message. Can be used to calculate the …\nID of the application.\nID of the channel.\nThe channel Id.\nThe unique Id of the private channel.\nThe Id of the stage instance.\nThe id of the tag.\nImage information of the embed.\nIndicator of whether the field should display as inline.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether non-moderators can add other non-moderators to a …\nWhether non-moderators can add other non-moderators to a …\nGets all of the channel’s invites.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether this notification is for a renewal rather than a …\nWhether or not this channel is text-based, meaning that it …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe type of the embed. For embeds not generated by Discord…\nThe type of the channel.\nThe channel type.\nIndicator of the type of message this is, i.e. whether it …\nIndicator of the type of message this is, i.e. whether it …\nKind of message activity.\nThe kind of channel\nThe channel type.\nIndicator of the type of channel this is.\nThe Id of the last message sent in the channel.\nThe Id of the last message sent.\nThe timestamp of the time a pin was most recently made.\nTimestamp of the last time a <code>Message</code> was pinned.\nReturns a link referencing this message. When clicked, …\nWhen a thread is locked, only users with <code>MANAGE_THREADS</code> …\nWhen a thread is locked, only users with <code>MANAGE_THREADS</code> …\nIndicator of whether the current user has sent this type …\nIndicator of whether the current user has sent the type of …\nRetrieves a clone of the author’s Member instance, if …\nThread member object for the current user, if they have …\nA partial amount of data about the user’s member data\nA partial amount of data about the user’s member data\nThe optional object of the member which added the reaction.\nAn approximate count of users in a thread, stops counting …\nRetrieves <code>Member</code>s from the current channel.\nA thread member for each returned thread the current user …\nChannels specifically mentioned in this message.\nChannels specifically mentioned in this message.\nIndicator of whether the message mentions everyone.\nIndicator of whether the message mentions everyone.\nArray of <code>Role</code>s’ Ids mentioned in the message.\nArray of <code>Role</code>s’ Ids mentioned in the message.\nArray of users mentioned in the message.\nArray of users mentioned in the message.\nChecks whether the message mentions the current user.\nChecks whether the message mentions passed <code>User</code>.\nChecks whether the message mentions passed <code>UserId</code>.\nGets a message from the channel.\nGets a message from the channel.\nRetrieves the <code>Message</code> associated with this reaction.\nThe Id of the user who sent the message which this reacted …\nAn approximate count of messages in the thread.\nID of the originating message.\nThe Id of the <code>Message</code> that was reacted to.\nReference data sent with crossposted messages.\nReference data sent with crossposted messages.\nGets messages from the channel.\nGets messages from the channel.\nWhether this tag can only be added to or removed from …\nThe name of the author.\nThe name of the field.\nThe name of the provider.\nThe name of the channel. (1-100 characters)\nName of the application.\nThe name of the channel\nThe channel name.\nThe name of the tag (0-20 characters).\nCreates a new embed field.\nNon-repeating number used for ensuring message order.\nNon-repeating number used for ensuring message order.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nUsed to tell if the channel is not safe for work.\nChecks the length of a message to ensure that it is within …\nThe Id of the user who created this channel\nThe Id of the parent category for a channel, or of the …\nThe channel category Id,  or the parent text channel Id …\nThe Id of the parent category for a channel, or of the …\n<code>party_id</code> from a Rich Presence event.\nPermission overwrites for <code>Member</code>s and for <code>Role</code>s.\nComputed permissions for the invoking user in the channel, …\nThe channel permissions.\nCalculates the permissions of a member.\nPins a <code>Message</code> to the channel.\nPins this message to its channel.\nPins a <code>Message</code> to the channel.\nIndicator of whether the message is pinned.\nIndicator of whether the message is pinned.\nGets all channel’s pins.\nRetrieves the list of messages that have been pinned in …\nA poll that may be attached to a message.\nA poll that may be attached to a message.\nRetrieves the position of the inner <code>GuildChannel</code>.\nThe position of the channel.\nA generally increasing integer (there may be gaps or …\nA generally increasing integer (there may be gaps or …\nThe privacy level of the Stage instance.\nConverts from <code>Channel</code> to <code>Option&lt;PrivateChannel&gt;</code>.\nProvider information for the embed.\nA proxied URL of the author icon.\nA proxied URL of the footer icon.\nThe proxy URL.\nA proxied URL of the image.\nA proxied URL of the thumbnail.\nA proxied URL of the thumbnail.\nA rate limit that applies per user and excludes bots.\nReact to the message with a custom <code>Emoji</code> or unicode …\nThe type of reaction.\nThe type of reaction.\nGets the list of <code>User</code>s who have reacted to a <code>Message</code> with …\nGets the list of <code>User</code>s who have reacted to a <code>Message</code> with …\nGets the list of <code>User</code>s who have reacted to a <code>Message</code> with …\nArray of reactions performed on the message.\nArray of reactions performed on the message.\nThe recipient to the private channel.\nThe message that was replied to using this message.\nThe message that was replied to using this message.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nUses Discord’s inline reply to a user without pinging …\nUses Discord’s inline reply to a user with a ping.\nThe results of the Poll.\nData of the role subscription purchase or renewal that …\nData of the role subscription purchase or renewal that …\nThe id of the sku and listing that the user is subscribed …\nThe region override.\nSends a message with just the given message content in the …\nSends a message with just the given message content in the …\nSends file(s) along with optional message contents.\nSends file(s) along with optional message contents.\nSends a message to the channel.\nSends a message to the channel.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets the archived to the value provided.\nSets the invitable to the value provided.\nSets the locked to the value provided.\nSets the mention_everyone to the value provided.\nSets the pinned to the value provided.\nSets the tts to the value provided.\nThe size of the file in bytes.\nStarts typing in the channel for an indefinite period of …\nStarts typing in the channel for an indefinite period of …\nThe status of a voice channel.\nArray of message sticker item objects.\nArray of message sticker item objects.\nStreams over all the messages in a channel.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nReact to the message with a custom <code>Emoji</code> or unicode …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe associated text with the footer.\nThe thread that was started from this message, includes …\nThe thread that was started from this message, includes …\nThe thread metadata.\nThe thread metadata.\nThe threads channels.\nThumbnail information of the embed.\nThe name of the tier that the user is subscribed to.\nTimestamp information.\nInitial message creation timestamp, calculated from its Id.\nInitial message creation timestamp, calculated from its Id.\nThe title of the embed.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe topic of the channel.\nThe topic of the stage instance.\nThe number of messages ever sent in a thread, it’s …\nThe cumulative number of months that the user has been …\nIndicator of whether the command is to be played back via …\nIndicator of whether the command is to be played back via …\nHelper function to allow testing equality of unicode …\nHelper function to allow comparing unicode emojis without …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUnpins a <code>Message</code> in the channel given by its Id.\nUnpins the message from its channel.\nUnpins a <code>Message</code> in the channel given by its Id.\nThe URL of the uploaded attachment.\nThe URL of the embed.\nThe URL of the author.\nSource URL of the image.\nThe URL of the provider.\nThe source URL of the thumbnail.\nThe source URL of the video.\nRetrieves the user that made the reaction.\nThe Id of the <code>User</code> that sent the reaction.\nThe maximum number of members allowed in the channel.\nRetrieves the list of <code>User</code>s who have reacted to a <code>Message</code> …\nThe value of the field.\nThe embed’s video information.\nThe video quality mode for a voice channel.\nList of bytes representing a sampled waveform (present if …\nThe Id of the webhook that sent this message, if one did.\nThe Id of the webhook that sent this message, if one did.\nThe created webhook ID in the target channel\nRetrieves the channel’s webhooks.\nIf the attachment is an image, then the width of the image …\nThe width of the image.\nThe width of the thumbnail in pixels.\nThe width of the video in pixels.\nWhether the emoji is animated.\nThe Id of the custom <code>Emoji</code>.\nThe name of the custom emoji. This is primarily used for …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nA utility struct to help with working with the basic …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to <code>(168, 67, 0)</code>…\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nCreates a new <code>Colour</code>, setting its RGB value to …\nReturns the blue RGB component of this Colour.\nColour constants used by Discord for their branding, role …\nReturns the argument unchanged.\nConstructs a Colour from RGB.\nConstructs a Colour from a u32.\nGenerates a new Colour from an RGB value, creating an …\nReturns the green RGB component of this Colour.\nReturns a hexadecimal string of this Colour.\nCalls <code>U::from(self)</code>.")