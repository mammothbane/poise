searchState.loadedDescShard("to_arraystring", 0, "A no-alloc version of <code>ToString</code> implemented for …\nA string with a fixed capacity.\nAn associated type to turn <code>ArrayString</code>’s const generic …\nThe maximum length that Self can be formatted into. This …\nA no-alloc version of <code>ToString</code> implemented for …\nReturn a raw mutable pointer to the string’s buffer.\nReturn a mutable string slice of the whole <code>ArrayString</code>.\nReturn a raw pointer to the string’s buffer.\nReturn a string slice of the whole <code>ArrayString</code>.\nReturn the capacity of the <code>ArrayString</code>.\nMake the string empty.\nReturn an empty <code>ArrayString</code>\nReturns the argument unchanged.\nCreate a new <code>ArrayString</code> from a <code>str</code>.\nCreate a new <code>ArrayString</code> from a byte string literal.\nCalls <code>U::from(self)</code>.\nReturns whether the string is empty.\nReturn if the <code>ArrayString</code> is completely filled.\nReturn the length of the string.\nCreate a new empty <code>ArrayString</code>.\nCreate a new empty <code>ArrayString</code> (const fn).\nRemoves the last character from the string and returns it.\nAdds the given char to the end of the string.\nAdds the given string slice to the end of the string.\nReturns the capacity left in the <code>ArrayString</code>.\nRemoves a <code>char</code> from this <code>ArrayString</code> at a byte position …\nSet the strings’s length.\nReturns the value’s formatted representation in an …\nShortens this <code>ArrayString</code> to the specified length.\nAdds the given char to the end of the string.\nAdds the given string slice to the end of the string.\nCreate a new <code>ArrayString</code> value fully filled with ASCII …")